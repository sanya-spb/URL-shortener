{
  "openapi": "3.0.0",
  "info": {
    "title": "URL-shortener",
    "description": "This is a simple API for GB/Go Backend level1",
    "contact": {
      "email": "sanya-spb@mail.ru"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "admins",
      "description": "Secured Admin-only calls"
    },
    {
      "name": "developers",
      "description": "Operations available to regular developers"
    }
  ],
  "paths": {
    "/new": {
      "put": {
        "tags": [
          "admins"
        ],
        "summary": "adds an inventory item",
        "description": "method Create (in CRUD spec)",
        "operationId": "addInventory",
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Link"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/update{uuid}": {
      "put": {
        "tags": [
          "admins"
        ],
        "summary": "adds an inventory item",
        "description": "method Update (in CRUD spec)",
        "operationId": "updInventory",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "pass an id for updating",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Link"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "item updated successfully"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/info/{uuid}": {
      "get": {
        "tags": [
          "admins"
        ],
        "summary": "get inventory item info",
        "description": "method READ (in CRUD spec)",
        "operationId": "getInventory",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "pass an id for looking up inventory",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "found, see info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/delete/{uuid}": {
      "delete": {
        "tags": [
          "admins"
        ],
        "summary": "delete an inventory item",
        "description": "method Delete (in CRUD spec)",
        "operationId": "delInventory",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "pass an uuid to delete",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "item deleted"
          },
          "404": {
            "description": "uuid not found"
          }
        }
      }
    },
    "/go/{ls}": {
      "get": {
        "tags": [
          "developers"
        ],
        "summary": "go to source link",
        "description": "By passing in the appropriate options, you can move external www source\n",
        "operationId": "goTo",
        "parameters": [
          {
            "name": "ls",
            "in": "path",
            "description": "short link",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "found, go to source"
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/stat": {
      "get": {
        "tags": [
          "developers"
        ],
        "summary": "get statistic",
        "description": "By passing in the appropriate options, you can get stats for using URL-shorterner\n",
        "operationId": "getStat",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "pass an optional search string for looking up inventory",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "found, see stat",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stat"
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Link": {
        "required": [
          "CreatedAt",
          "DeleteAt",
          "Descr",
          "ID",
          "Name",
          "ShortLink",
          "URL",
          "User"
        ],
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426655440000"
          },
          "URL": {
            "type": "string",
            "format": "url",
            "example": "https://google.com/index.html"
          },
          "Name": {
            "type": "string",
            "example": "Google"
          },
          "Descr": {
            "type": "string",
            "example": "Google main page"
          },
          "ShortLink": {
            "type": "string",
            "format": "url",
            "example": "https://gb.7bit.xyz/wohv7Boh"
          },
          "CreatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2031-08-29T09:12:33.001Z"
          },
          "DeleteAt": {
            "type": "string",
            "format": "date-time",
            "example": "2031-08-29T09:12:33.001Z"
          },
          "User": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "User": {
        "required": [
          "nickname"
        ],
        "properties": {
          "nickname": {
            "type": "string",
            "example": "James Fenimore Cooper"
          }
        }
      },
      "Stat": {
        "required": [
          "link",
          "redirects"
        ],
        "type": "array",
        "properties": {
          "link": {
            "$ref": "#/components/schemas/Link"
          },
          "redirects": {
            "type": "integer",
            "format": "uint64",
            "example": 65536
          }
        },
        "items": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Link"
            },
            {
              "type": "integer"
            }
          ]
        }
      }
    }
  }
}