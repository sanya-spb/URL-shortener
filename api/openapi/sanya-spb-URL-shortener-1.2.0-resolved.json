{
  "openapi": "3.0.0",
  "info": {
    "title": "URL-shortener",
    "description": "This is a simple API for GB/Go Backend level1",
    "contact": {
      "email": "sanya-spb@mail.ru"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.2.0"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "admin",
      "description": "Secured Admin-only calls"
    },
    {
      "name": "user",
      "description": "Operations available to regular users"
    }
  ],
  "paths": {
    "/": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "adds Link",
        "description": "method Create (in CRUD spec)",
        "operationId": "addLink",
        "requestBody": {
          "description": "Link info to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "Not Implemented"
          }
        }
      }
    },
    "/{uuid}": {
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "updates Link",
        "description": "method Update (in CRUD spec)",
        "operationId": "updLink",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "pass an uuid for updating",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Link info to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/uuid_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "Not Implemented"
          }
        }
      }
    },
    "/r/{uuid}": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "updates Link and return updated Link",
        "description": "method Update (in CRUD spec)",
        "operationId": "updRetLink",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "pass an uuid for updating",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Link info to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/r_uuid_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "Not Implemented"
          }
        }
      }
    },
    "/i/{uuid}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "gets Link info",
        "description": "method READ (in CRUD spec)",
        "operationId": "getLink",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "pass an uuid for looking up Link",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "Not Implemented"
          }
        }
      }
    },
    "/d/{uuid}": {
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "delete Link",
        "description": "method Delete (in CRUD spec)",
        "operationId": "delLink",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "pass an uuid to delete",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "Not Implemented"
          }
        }
      }
    },
    "/d/r/{uuid}": {
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "delete Link and return deleted Link",
        "description": "method Delete (in CRUD spec)",
        "operationId": "delRetLink",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "pass an uuid to delete",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "Not Implemented"
          }
        }
      }
    },
    "/{target}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "go to target coded link",
        "description": "By passing in the appropriate options, you can move external www source\n",
        "operationId": "goTo",
        "parameters": [
          {
            "name": "target",
            "in": "path",
            "description": "pass an target coded link to redirect",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "307": {
            "description": "Temporary Redirect"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "Not Implemented"
          }
        }
      }
    },
    "/stat": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "get statistic",
        "description": "By passing in the appropriate options, you can get stats for using URL-shorterner\n",
        "operationId": "getStat",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "pass an optional search string for looking up inventory",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "found, see stat",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "Not Implemented"
          }
        }
      }
    },
    "/status": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "get status",
        "description": "always return ok",
        "operationId": "getStatus",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "ok"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "Not Implemented"
          }
        }
      }
    },
    "/status/{code}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "echo code",
        "description": "always echo code",
        "operationId": "echoStatus",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "pass an uuid for looking up Link",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "codeOK"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "Not Implemented"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Link": {
        "required": [
          "CreatedAt",
          "DeleteAt",
          "Descr",
          "GoCount",
          "ID",
          "Name",
          "URL",
          "User"
        ],
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "example": "wohv7Boh"
          },
          "URL": {
            "type": "string",
            "format": "url",
            "example": "https://google.com/index.html"
          },
          "Name": {
            "type": "string",
            "example": "Google"
          },
          "Descr": {
            "type": "string",
            "example": "Google main page"
          },
          "CreatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2031-08-29T09:12:33.001Z"
          },
          "DeleteAt": {
            "type": "string",
            "format": "date-time",
            "example": "2031-08-29T09:12:33.001Z"
          },
          "User": {
            "$ref": "#/components/schemas/User"
          },
          "GoCount": {
            "type": "integer",
            "format": "int64",
            "example": 1024
          }
        }
      },
      "User": {
        "required": [
          "nickname"
        ],
        "properties": {
          "nickname": {
            "type": "string",
            "example": "James Fenimore Cooper"
          }
        }
      },
      "body": {
        "required": [
          "Descr",
          "Name",
          "URL"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "example": "Google"
          },
          "URL": {
            "type": "string",
            "format": "url",
            "example": "https://google.com/index.html"
          },
          "Descr": {
            "type": "string",
            "example": "Google main page v.1"
          },
          "DeleteAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-01T11:11:11.111Z"
          }
        }
      },
      "uuid_body": {
        "required": [
          "Descr",
          "Name",
          "URL"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "example": "Google"
          },
          "URL": {
            "type": "string",
            "format": "url",
            "example": "https://google.com/index.html"
          },
          "Descr": {
            "type": "string",
            "example": "Google main page v.2"
          },
          "DeleteAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-02-02T22:22:22.222Z"
          }
        }
      },
      "r_uuid_body": {
        "required": [
          "Descr",
          "Name",
          "URL"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "example": "Google"
          },
          "URL": {
            "type": "string",
            "format": "url",
            "example": "https://google.com/index.html"
          },
          "Descr": {
            "type": "string",
            "example": "Google main page v.2"
          },
          "DeleteAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-02-02T22:22:22.222Z"
          }
        }
      }
    }
  }
}